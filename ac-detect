#!/bin/bash

# DETECTION IF THE DEVICE IS A LAPTOP OR NOT
detect_device_type () {
  
  # WE DETECT WHAT KIND OF DEVICE THIS IS (Technically we don't have to detect the type of device since we check for a battery anyways but I'd rather have the check for extra accuracy.)
  echo "Detecting device type"
  if [[ $(< /sys/class/dmi/id/chassis_type) =~ ^(8|9|10|11|14|31|32)$ ]]; then
  
  # IF THE DEVICE IS A MOBILE DEVICE WE CHECK IF A BATTERY TRULY EXISTS AS SOME USERS TAKE THEM OUT
  BATTERY_PATH=$(upower -e | grep -E 'BAT')
  if [[ -n "$BATTERY_PATH" ]]; then
  echo "Device has a battery"
  update_logic
  
  # IF THE MOBILE DEVICE DOESN'T HAVE A BATTERY WE JUST UPDATE
  else
  echo "Mobile device detected without battery"
  tu_dup
  fi
    
  # IF THE DEVICE ISN'T DETECTED AS A MOBILE DEVICE THEN WE JUST UPDATE
  else 
  echo "Device doesn't have a battery"
  tu_dup
  fi
  }

# THIS JUST DETERMINES WHAT TO DO ONCE WE THE DEVICE HAS A BATTERY
update_logic () {

  echo "Starting updater"
  
  # WE MEASURE IF THE BATTERY IS ON AC POWER OR NOT
  STATE=$(upower -i "$BATTERY_PATH" | awk '/state:/ {print $2}')
   
  # IF ITS ON AC WE UPDATE
  if [[ "$STATE" =~ ^(charging|pending-charge|fully-charged)$ ]]; then
  echo "Device is plugged in, starting update"
  tu_dup
  
  # IF AC IS UNPLUGGED WE WAIT FOR AC POWER
  elif [[ "$STATE" == "discharging" ]]; then
  wait_ac
  
  # IF BATTERY STATE IS UNKNOWN WE EXIT FOR SAFETY REASONS
  elif [[ "$STATE" == "unknown" ]]; then
  echo "Battery status cannot be determined, exiting.."
  exit 1
  
  # THIS IS JUST IN CASE THE BATTERY STATE IS SOMETHING COMPLETELY UNEXPECTED!
  else
  echo "Unexpected battery state: $STATE exiting.."
  exit 1
  fi
  }

# IF THE DEVICE WASN'T PLUGGED INTO AC WE WAIT FOR AC
wait_ac () {
  echo "Device is unplugged, waiting for AC power"
  while read line; do
  if [[ "$line" =~ ^("'State': <uint32 1>"|"'State': <uint32 4>"|"'State': <uint32 5>")$ ]]; then

  # ONCE AC IS DETECTED THE UPDATE TRIGGERS
  echo "Device is plugged in, starting update"
  tu_dup
  break
  fi
  done < <(gdbus monitor --system --dest org.freedesktop.UPower --object-path "$BATTERY_PATH" | grep -m1 -oE "'State': <uint32 (1|4|5)>")
  }
  
# THE UPDATE COMMAND
tu_dup() {

  # WE WAIT 30 SECONDS BEFORE STARTING THE UPDATE SO IF THE USER RESUMES FROM SLEEP THEY HAVE TIME TO CONNECT TO WI-FI
  sleep 30
  transactional-update cleanup ${UPDATE_METHOD} reboot
  }
  
detect_device_type
